name: Build and Release Book

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup TeXLive
        uses: ./.github/actions/setup-texlive
        with:
          requirements-file: '.github/texlive/requirements.txt'

      - name: Show book_wmd_to_glitch.tex
        run: cat book_wmd_to_glitch.tex

      - name: Compile LaTeX to PDF
        run: |
          latexmk -pdf -interaction=nonstopmode -f book_wmd_to_glitch.tex
        # -f forces latexmk to continue even if there are errors (useful for CI)
        # -interaction=nonstopmode prevents latexmk from stopping on errors

      - name: Generate HTML with Pandoc
        run: |
          pandoc -s book_wmd_to_glitch.tex -o book_wmd_to_glitch-${{ github.ref_name }}.html

      - name: Generate EPUB with Pandoc
        run: |
          pandoc -s book_wmd_to_glitch.tex -o book_wmd_to_glitch-${{ github.ref_name }}.epub

      - name: Generate FB2 with Pandoc
        run: |
          pandoc -s book_wmd_to_glitch.tex -o book_wmd_to_glitch-${{ github.ref_name }}.fb2

      - name: Install Calibre
        run: |
          sudo apt-get update
          sudo apt-get install -y calibre

      - name: Convert EPUB to MOBI
        run: |
          ebook-convert book_wmd_to_glitch-${{ github.ref_name }}.epub book_wmd_to_glitch-${{ github.ref_name }}.mobi

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload PDF
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: book_wmd_to_glitch.pdf
          asset_name: book_wmd_to_glitch-${{ github.ref_name }}.pdf
          asset_content_type: application/pdf

      - name: Upload HTML
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: book_wmd_to_glitch-${{ github.ref_name }}.html
          asset_name: book_wmd_to_glitch-${{ github.ref_name }}.html
          asset_content_type: text/html

      - name: Upload EPUB
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: book_wmd_to_glitch-${{ github.ref_name }}.epub
          asset_name: book_wmd_to_glitch-${{ github.ref_name }}.epub
          asset_content_type: application/epub+zip

      - name: Upload FB2
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: book_wmd_to_glitch-${{ github.ref_name }}.fb2
          asset_name: book_wmd_to_glitch-${{ github.ref_name }}.fb2
          asset_content_type: application/x-fictionbook+xml

      - name: Upload MOBI
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: book_wmd_to_glitch-${{ github.ref_name }}.mobi
          asset_name: book_wmd_to_glitch-${{ github.ref_name }}.mobi
          asset_content_type: application/x-mobipocket-ebook